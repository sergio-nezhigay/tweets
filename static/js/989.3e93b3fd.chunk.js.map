{"version":3,"file":"static/js/989.3e93b3fd.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","redux/filter/filterSelectors.js","hooks/useFilter.js","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","Pages/ContactsPage/ContactsPage.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx"],"sourcesContent":["// import { styled } from '@mui/material';\r\nimport { Form } from 'formik';\r\nimport styled from '@emotion/styled';\r\n\r\nexport const FormContainer = styled(Form)(() => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  flexDirection: 'column',\r\n  width: '100%',\r\n  margin: '0 auto',\r\n}));\r\n\r\nexport const RowContainer = ({ children }) => (\r\n  <div\r\n    style={{\r\n      display: 'grid',\r\n      width: '100%',\r\n      gridTemplateColumns: '1fr 1fr',\r\n      justifyContent: 'center',\r\n      marginBottom: '16px',\r\n      gap: '8px',\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport const ErrorContainer = styled.h3`\r\n  color: red;\r\n  margin-top: 8px;\r\n  margin-bottom: 16px;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { Formik, Field } from 'formik';\r\nimport { object, string } from 'yup';\r\nimport { TextField, Button, Box } from '@mui/material';\r\n\r\nimport {\r\n  useAddContactMutation,\r\n  useFetchContactsQuery,\r\n} from 'redux/contacts/contactsAPI';\r\nimport {\r\n  FormContainer,\r\n  RowContainer,\r\n  ErrorContainer,\r\n} from './ContactForm.styled';\r\n\r\nconst numberRegex =\r\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\r\nconst nameRegex = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\r\nconst numberMessage = `Phone number must be digits and can contain spaces, dashes, parentheses and can start with +`;\r\nconst nameMessage = `Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan`;\r\n\r\nconst schema = object({\r\n  name: string().matches(nameRegex, nameMessage).required(),\r\n  number: string().matches(numberRegex, numberMessage).required(),\r\n});\r\n\r\nconst CustomTextField = ({ name, label, placeholder }) => (\r\n  <Field name={name}>\r\n    {({ field, meta }) => (\r\n      <Box>\r\n        <TextField\r\n          {...field}\r\n          label={label}\r\n          fullWidth\r\n          placeholder={placeholder}\r\n          error={meta.touched && meta.error}\r\n          helperText={meta.touched && meta.error ? meta.error : ''}\r\n        />\r\n      </Box>\r\n    )}\r\n  </Field>\r\n);\r\n\r\nexport function ContactForm() {\r\n  const { data: contacts = [] } = useFetchContactsQuery();\r\n  const [addContact] = useAddContactMutation();\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleSubmit = async (values, { resetForm }) => {\r\n    const { name, number } = values;\r\n    if (\r\n      contacts.some(contact =>\r\n        contact.name.toLowerCase().includes(name.toLowerCase())\r\n      )\r\n    ) {\r\n      setErrorMessage(\r\n        `${name} is already in contacts. You can edit data in table below...`\r\n      );\r\n      return;\r\n    }\r\n    try {\r\n      setErrorMessage(``);\r\n      await addContact({ name, number }).unwrap();\r\n      resetForm();\r\n    } catch (err) {\r\n      console.error('Failed to save the post: ', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ name: '', number: '' }}\r\n      validationSchema={schema}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <FormContainer>\r\n        <RowContainer>\r\n          <CustomTextField\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            placeholder=\"Enter the name\"\r\n          />\r\n          <CustomTextField\r\n            name=\"number\"\r\n            label=\"Number\"\r\n            placeholder=\"Enter the number\"\r\n          />\r\n        </RowContainer>\r\n        {errorMessage && <ErrorContainer>{errorMessage}</ErrorContainer>}\r\n        <Button variant=\"contained\" type=\"submit\">\r\n          Add Contact\r\n        </Button>\r\n      </FormContainer>\r\n    </Formik>\r\n  );\r\n}\r\n","export const selectFilter = state => state.filter;\r\n","import { useSelector } from 'react-redux';\r\nimport { selectFilter } from 'redux/filter/filterSelectors';\r\n\r\nexport const useFilter = () => {\r\n  const filter = useSelector(selectFilter);\r\n\r\n  return {\r\n    filter,\r\n  };\r\n};\r\n","import styled from '@emotion/styled';\r\nimport { Box, Button } from '@mui/material';\r\n\r\nexport const StyledBox = styled(Box)`\r\n  gap: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n  margin-left: auto;\r\n  min-width: 7rem;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {\r\n  useDeleteContactMutation,\r\n  useUpdateContactMutation,\r\n} from 'redux/contacts/contactsAPI';\r\n\r\nimport { TextField, Button, Typography } from '@mui/material';\r\n\r\nimport { StyledBox, StyledButton } from './ContactItem.styled';\r\n\r\nexport function ContactItem({ id, number, name }) {\r\n  const dispatch = useDispatch();\r\n  const [isEditMode, setEditing] = useState(false);\r\n  const [editedName, setEditedName] = useState(name);\r\n  const [editedNumber, setEditedNumber] = useState(number);\r\n  const [deleteContact] = useDeleteContactMutation();\r\n  const [updateContact] = useUpdateContactMutation();\r\n  const onDelete = () => {\r\n    dispatch(deleteContact(id));\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    const updatedContact = {\r\n      id,\r\n      name: editedName,\r\n      number: editedNumber,\r\n    };\r\n    try {\r\n      await updateContact(updatedContact).unwrap();\r\n      setEditing(false);\r\n    } catch (err) {\r\n      console.error('Failed to save the post: ', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      {isEditMode ? (\r\n        <>\r\n          <StyledBox>\r\n            <TextField\r\n              type=\"text\"\r\n              focused\r\n              value={editedName}\r\n              variant=\"standard\"\r\n              onChange={e => setEditedName(e.target.value)}\r\n            />\r\n            <TextField\r\n              type=\"text\"\r\n              focused\r\n              value={editedNumber}\r\n              variant=\"standard\"\r\n              onChange={e => setEditedNumber(e.target.value)}\r\n            />\r\n            <StyledButton\r\n              onClick={handleUpdate}\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n            >\r\n              Update\r\n            </StyledButton>\r\n            <Button\r\n              sx={{\r\n                minWidth: '7rem',\r\n              }}\r\n              onClick={() => setEditing(false)}\r\n              variant=\"contained\"\r\n              color=\"error\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </StyledBox>\r\n        </>\r\n      ) : (\r\n        <StyledBox>\r\n          <Typography\r\n            sx={{\r\n              fontWeight: 'bold',\r\n            }}\r\n          >\r\n            {`${name}: `}\r\n          </Typography>\r\n          <Typography>{number}</Typography>\r\n          <StyledButton onClick={() => setEditing(true)} variant=\"contained\">\r\n            Edit\r\n          </StyledButton>\r\n          <Button\r\n            sx={{\r\n              minWidth: '7rem',\r\n            }}\r\n            onClick={onDelete}\r\n            variant=\"contained\"\r\n          >\r\n            Delete\r\n          </Button>\r\n        </StyledBox>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  list-style: none;\r\n  padding-left: 0;\r\n  gap: 12px;\r\n`;\r\n","import React from 'react';\r\nimport { useFetchContactsQuery } from 'redux/contacts/contactsAPI';\r\n\r\nimport { useFilter } from 'hooks/useFilter';\r\nimport { ContactItem } from 'components/ContactItem/ContactItem';\r\nimport { List } from './ContactList.styled';\r\n\r\nconst ContactList = () => {\r\n  const { data: contacts = [] } = useFetchContactsQuery();\r\n  const { filter } = useFilter();\r\n  const filteredContacts = React.useMemo(\r\n    () =>\r\n      contacts.filter(({ name }) =>\r\n        name.toLowerCase().includes(filter.toLowerCase())\r\n      ),\r\n    [contacts, filter]\r\n  );\r\n\r\n  return (\r\n    <List>\r\n      {filteredContacts.map(({ id, number, name }) => (\r\n        <ContactItem key={id} id={id} number={number} name={name} />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { TextField } from '@mui/material';\r\n\r\nimport { setFilter } from 'redux/filter/filterSlice';\r\nimport { useFilter } from 'hooks/useFilter';\r\n\r\nexport function Filter() {\r\n  const { filter } = useFilter();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => {\r\n    dispatch(setFilter(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      type=\"text\"\r\n      label=\"Find contacts by name\"\r\n      name=\"filter\"\r\n      placeholder=\"Enter your search\"\r\n      value={filter}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet';\r\nimport { Section } from 'components/Section/Section';\r\n\r\nimport { useFetchContactsQuery } from 'redux/contacts/contactsAPI';\r\n\r\nimport { ContactForm } from 'components/ContactForm/ContactForm';\r\nimport ContactList from 'components/ContactList/ContactList';\r\nimport { Filter } from 'components/Filter/Filter';\r\n\r\nexport default function ContactsPage() {\r\n  const { isLoading } = useFetchContactsQuery();\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Your contacts</title>\r\n      </Helmet>\r\n      <div>{isLoading && 'Request in progress...'}</div>\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Section>\r\n\r\n      <Section title=\"Contacts\">\r\n        <Filter />\r\n        <ContactList />\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Legend = styled.legend`\r\n  font-size: 1.3rem;\r\n  font-weight: bold;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport { Legend } from './Section.styled';\r\n\r\nexport const Section = ({ title, children }) => {\r\n  return (\r\n    <Box sx={{ padding: 3 }} component=\"fieldset\">\r\n      <Legend>{title}</Legend>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n"],"names":["FormContainer","styled","Form","display","alignItems","justifyContent","flexDirection","width","margin","RowContainer","_ref","children","_jsx","style","gridTemplateColumns","marginBottom","gap","ErrorContainer","h3","_templateObject","_taggedTemplateLiteral","schema","object","name","string","matches","required","number","CustomTextField","label","placeholder","Field","_ref2","field","meta","Box","TextField","_objectSpread","fullWidth","error","touched","helperText","ContactForm","_useFetchContactsQuer2","useFetchContactsQuery","data","contacts","_useAddContactMutatio","useAddContactMutation","addContact","_slicedToArray","_useState","useState","_useState2","errorMessage","setErrorMessage","handleSubmit","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref3","resetForm","wrap","_context","prev","next","some","contact","toLowerCase","includes","concat","abrupt","unwrap","t0","console","stop","_x","_x2","apply","arguments","Formik","initialValues","validationSchema","onSubmit","_jsxs","Button","variant","type","selectFilter","state","filter","useFilter","useSelector","StyledBox","StyledButton","_templateObject2","ContactItem","id","dispatch","useDispatch","isEditMode","setEditing","_useState3","_useState4","editedName","setEditedName","_useState5","_useState6","editedNumber","setEditedNumber","_useDeleteContactMuta","useDeleteContactMutation","deleteContact","_useUpdateContactMuta","useUpdateContactMutation","updateContact","handleUpdate","updatedContact","_Fragment","focused","value","onChange","e","target","onClick","color","sx","minWidth","Typography","fontWeight","List","ul","filteredContacts","React","map","Filter","setFilter","ContactsPage","isLoading","Helmet","Section","title","ContactList","Legend","legend","padding","component"],"sourceRoot":""}